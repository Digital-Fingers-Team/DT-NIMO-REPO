rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Conversations collection
    match /conversations/{conversationId} {
      allow read: if request.auth != null &&
        (request.auth.uid in resource.data.participants ||
         request.auth.token.email in resource.data.participants);
      allow create: if request.auth != null &&
        (request.auth.uid in request.resource.data.participants ||
         request.auth.token.email in request.resource.data.participants);
      allow update, delete: if request.auth != null &&
        (request.auth.uid in resource.data.participants ||
         request.auth.token.email in resource.data.participants);
    }
    
    // Messages collection
    match /messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (
        request.auth.uid == request.resource.data.senderId ||
        request.auth.token.email == request.resource.data.senderId
      );
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.senderId ||
        request.auth.token.email == resource.data.senderId ||
        // Allow marking messages as read
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status'])
      );
    }
    
    // Documents collection
    match /documents/{documentId} {
      // Public documents can be read by anyone authenticated
      allow read: if request.auth != null && (
        resource.data.isPublic == true ||
        request.auth.uid == resource.data.uploadedBy ||
        request.auth.token.email == resource.data.uploadedBy
      );

      // Only authenticated users can create documents
      allow create: if request.auth != null && (
        request.auth.uid == request.resource.data.uploadedBy ||
        request.auth.token.email == request.resource.data.uploadedBy
      );

      // Only document owner can update/delete
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.uploadedBy ||
        request.auth.token.email == resource.data.uploadedBy
      );
    }
    
    // User statistics
    match /stats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // System settings (admin only)
    match /settings/{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Notifications
    match /notifications/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Activity logs
    match /activities/{activityId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
    }
  }
}